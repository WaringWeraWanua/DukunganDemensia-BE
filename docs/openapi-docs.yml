openapi: 3.0.0
info:
  version: 1.0.0
  title: My API
  description: This is the API
servers:
  - url: v1
components:
  schemas:
    UserDAO:
      type: object
      properties:
        id:
          type: string
          description: user's id
          example: "1"
        createdAt:
          type: string
          description: user's created at
          example: 2021-08-01T00:00:00.000Z
        updatedAt:
          type: string
          description: user's updated at
          example: 2021-08-01T00:00:00.000Z
        name:
          type: string
          description: user's name
          example: John Doe
        email:
          type: string
          description: user's email
          example: johndoe@gmail.com
        username:
          type: string
          description: user's username
          example: johndoe
        phoneNumber:
          type: string
          description: user's phone number
          example: "08123456789"
        role:
          type: string
          enum: &a1
            - ADMIN
            - PATIENT
            - CARE_GIVER
          description: user's role
          example: PATIENT
      required:
        - id
        - createdAt
        - updatedAt
        - name
        - email
        - username
        - phoneNumber
        - role
    RespGetProfileData:
      type: object
      properties:
        id:
          type: string
          description: user's id
          example: "1"
        createdAt:
          type: string
          description: user's created at
          example: 2021-08-01T00:00:00.000Z
        updatedAt:
          type: string
          description: user's updated at
          example: 2021-08-01T00:00:00.000Z
        name:
          type: string
          description: user's name
          example: John Doe
        email:
          type: string
          description: user's email
          example: johndoe@gmail.com
        username:
          type: string
          description: user's username
          example: johndoe
        phoneNumber:
          type: string
          description: user's phone number
          example: "08123456789"
        role:
          type: string
          enum: *a1
          description: user's role
          example: PATIENT
      required:
        - id
        - createdAt
        - updatedAt
        - name
        - email
        - username
        - phoneNumber
        - role
    RespGetProfile:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
        error:
          type: string
        data:
          $ref: "#/components/schemas/RespGetProfileData"
      required:
        - success
        - message
    RespRegister:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
        error:
          type: string
        data:
          $ref: "#/components/schemas/UserDAO"
      required:
        - success
        - message
    RespLogin:
      type: object
      properties:
        token:
          type: string
          description: user's token
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9
        user:
          $ref: "#/components/schemas/UserDAO"
      required:
        - token
        - user
    ReqLogin:
      type: object
      properties:
        username:
          type: string
          description: user's username
          example: johndoe
        password:
          type: string
          description: user's password
          example: 123secret
      required:
        - username
        - password
    ReqRegister:
      type: object
      properties:
        name:
          type: string
          description: user's name
          example: John Doe
        email:
          type: string
          description: user's email
          example: johndoe@gmail.com
        username:
          type: string
          description: user's username
          example: johndoe
        password:
          type: string
          description: user's password
          example: secret-john123
        phoneNumber:
          type: string
          description: user's phone number
          example: "08123456789"
        role:
          type: string
          enum:
            - ADMIN
            - PATIENT
            - CARE_GIVER
          description: user's role
          example: PATIENT
        careGiverUsername:
          type: string
          description: care giver's username
          example: johndoecarer
      required:
        - name
        - email
        - username
        - password
        - phoneNumber
        - role
    ReqCreateNews:
      type: object
      properties:
        title:
          type: string
          description: news's title
          example: News Title
        content:
          type: string
          description: news's content
          example: News Content
        imageUrl:
          type: string
          description: news's image url
          example: https://www.google.com
      required:
        - title
        - content
        - imageUrl
    LocationDAO:
      type: object
      properties:
        id:
          type: string
          description: location's id
          example: "1"
        createdAt:
          type: string
          description: location's created at
          example: 2021-08-01T00:00:00.000Z
        updatedAt:
          type: string
          description: location's updated at
          example: 2021-08-01T00:00:00.000Z
        latitude:
          type: number
          description: location's latitude
          example: -6.123456
        longitude:
          type: number
          description: location's longitude
          example: 106.123456
        patientId:
          type: string
          description: location's patient id
          example: "1"
      required:
        - id
        - createdAt
        - updatedAt
        - latitude
        - longitude
        - patientId
    ReqUpdateLocation:
      type: object
      properties:
        latitude:
          type: number
          description: location's latitude
          example: -6.123456
        longitude:
          type: number
          description: location's longitude
          example: 106.123456
      required:
        - latitude
        - longitude
    EventDAO:
      type: object
      properties:
        id:
          type: string
          description: event's id
          example: "1"
        createdAt:
          type: string
          description: event's created at
          example: 2021-08-01T00:00:00.000Z
        updatedAt:
          type: string
          description: event's updated at
          example: 2021-08-01T00:00:00.000Z
        title:
          type: string
          description: event's title
          example: Event Title
        description:
          type: string
          description: event's description
          example: Event Description
        startTime:
          type: string
          description: event's start time
          example: 2021-08-01T00:00:00.000Z
        endTime:
          type: string
          description: event's end time
          example: 2021-08-01T00:00:00.000Z
        proofImageUrl:
          anyOf:
            - type: string
              description: event's image url
              example: https://www.google.com
            - nullable: true
            - nullable: true
        doneTime:
          anyOf:
            - type: string
              description: event's done time
              example: 2021-08-01T00:00:00.000Z
            - nullable: true
            - nullable: true
        careRelationId:
          type: string
          description: event's care relation id
          example: "1"
        ringtoneType:
          type: string
          description: event's ringtone type
          example: ringtone
      required:
        - id
        - createdAt
        - updatedAt
        - title
        - description
        - startTime
        - endTime
        - proofImageUrl
        - doneTime
        - careRelationId
        - ringtoneType
    Events:
      type: array
      items:
        $ref: "#/components/schemas/EventDAO"
  parameters: {}
paths:
  /auth/login:
    post:
      requestBody:
        required: true
        description: Login request body
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ReqLogin"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/RespLogin"
                  - properties:
                      success:
                        type: boolean
                      message:
                        type: string
                      error:
                        type: string
                      data:
                        $ref: "#/components/schemas/RespLogin"
                    required:
                      - success
                      - message
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/RespLogin"
                  - properties:
                      success:
                        type: boolean
                      message:
                        type: string
                      error:
                        type: string
                      data:
                        $ref: "#/components/schemas/RespLogin"
                    required:
                      - success
                      - message
  /auth/register:
    post:
      requestBody:
        required: true
        description: Register request body
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ReqRegister"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RespRegister"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RespRegister"
  /news:
    post:
      requestBody:
        required: true
        description: Create news request body
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ReqCreateNews"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  error:
                    type: string
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        description: news's id
                        example: "1"
                      createdAt:
                        type: string
                        description: news's created at
                        example: 2021-08-01T00:00:00.000Z
                      updatedAt:
                        type: string
                        description: news's updated at
                        example: 2021-08-01T00:00:00.000Z
                      title:
                        type: string
                        description: news's title
                        example: News Title
                      content:
                        type: string
                        description: news's content
                        example: News Content
                      imageUrl:
                        type: string
                        description: news's image url
                        example: https://www.google.com
                    required:
                      - id
                      - createdAt
                      - updatedAt
                      - title
                      - content
                      - imageUrl
                required:
                  - success
                  - message
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  error:
                    type: string
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        description: news's id
                        example: "1"
                      createdAt:
                        type: string
                        description: news's created at
                        example: 2021-08-01T00:00:00.000Z
                      updatedAt:
                        type: string
                        description: news's updated at
                        example: 2021-08-01T00:00:00.000Z
                      title:
                        type: string
                        description: news's title
                        example: News Title
                      content:
                        type: string
                        description: news's content
                        example: News Content
                      imageUrl:
                        type: string
                        description: news's image url
                        example: https://www.google.com
                    required:
                      - id
                      - createdAt
                      - updatedAt
                      - title
                      - content
                      - imageUrl
                required:
                  - success
                  - message
    get:
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  error:
                    type: string
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          description: news's id
                          example: "1"
                        createdAt:
                          type: string
                          description: news's created at
                          example: 2021-08-01T00:00:00.000Z
                        updatedAt:
                          type: string
                          description: news's updated at
                          example: 2021-08-01T00:00:00.000Z
                        title:
                          type: string
                          description: news's title
                          example: News Title
                        content:
                          type: string
                          description: news's content
                          example: News Content
                        imageUrl:
                          type: string
                          description: news's image url
                          example: https://www.google.com
                      required:
                        - id
                        - createdAt
                        - updatedAt
                        - title
                        - content
                        - imageUrl
                required:
                  - success
                  - message
  /location:
    put:
      requestBody:
        required: true
        description: Update location request body
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ReqUpdateLocation"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  error:
                    type: string
                  data:
                    $ref: "#/components/schemas/LocationDAO"
                required:
                  - success
                  - message
        "400":
          description: Invalid request body
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  error:
                    type: string
                  data:
                    $ref: "#/components/schemas/LocationDAO"
                required:
                  - success
                  - message
        "401":
          description: Please authenticate
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  error:
                    type: string
                  data:
                    $ref: "#/components/schemas/LocationDAO"
                required:
                  - success
                  - message
    get:
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  error:
                    type: string
                  data:
                    $ref: "#/components/schemas/LocationDAO"
                required:
                  - success
                  - message
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  error:
                    type: string
                  data:
                    $ref: "#/components/schemas/LocationDAO"
                required:
                  - success
                  - message
        "404":
          description: Not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  error:
                    type: string
                  data:
                    $ref: "#/components/schemas/LocationDAO"
                required:
                  - success
                  - message
  /event:
    get:
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  error:
                    type: string
                  data:
                    type: object
                    properties:
                      patientId:
                        type: string
                        description: patient's id
                        example: "1"
                      careGiverId:
                        type: string
                        description: care giver's id
                        example: "1"
                      events:
                        $ref: "#/components/schemas/Events"
                    required:
                      - patientId
                      - careGiverId
                      - events
                required:
                  - success
                  - message
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  error:
                    type: string
                  data:
                    type: object
                    properties:
                      patientId:
                        type: string
                        description: patient's id
                        example: "1"
                      careGiverId:
                        type: string
                        description: care giver's id
                        example: "1"
                      events:
                        $ref: "#/components/schemas/Events"
                    required:
                      - patientId
                      - careGiverId
                      - events
                required:
                  - success
                  - message
        "404":
          description: Not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  error:
                    type: string
                  data:
                    type: object
                    properties:
                      patientId:
                        type: string
                        description: patient's id
                        example: "1"
                      careGiverId:
                        type: string
                        description: care giver's id
                        example: "1"
                      events:
                        $ref: "#/components/schemas/Events"
                    required:
                      - patientId
                      - careGiverId
                      - events
                required:
                  - success
                  - message
    post:
      requestBody:
        description: Create event
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: event's title
                  example: Event Title
                description:
                  type: string
                  description: event's description
                  example: Event Description
                startTime:
                  type: string
                  nullable: true
                  description: event's start time
                  example: 2021-08-01T00:00:00.000Z
                endTime:
                  type: string
                  nullable: true
                  description: event's end time
                  example: 2021-08-01T00:00:00.000Z
                ringtoneType:
                  type: string
                  description: event's ringtone type
                  example: ringtone
              required:
                - title
                - description
                - startTime
                - endTime
                - ringtoneType
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  error:
                    type: string
                  data:
                    $ref: "#/components/schemas/EventDAO"
                required:
                  - success
                  - message
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  error:
                    type: string
                  data:
                    $ref: "#/components/schemas/EventDAO"
                required:
                  - success
                  - message
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  error:
                    type: string
                  data:
                    $ref: "#/components/schemas/EventDAO"
                required:
                  - success
                  - message
        "404":
          description: Not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  error:
                    type: string
                  data:
                    $ref: "#/components/schemas/EventDAO"
                required:
                  - success
                  - message
  /event/:id/proofImageUrl:
    patch:
      parameters:
        - schema:
            type: string
            format: uuid
          required: true
          name: id
          in: path
      requestBody:
        required: true
        description: Request body for set image url
        content:
          application/json:
            schema:
              type: object
              properties:
                imageUrl:
                  type: string
                  description: event's image url
                  example: https://www.google.com
              required:
                - imageUrl
      responses:
        "200":
          description: Image url updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  error:
                    type: string
                  data:
                    $ref: "#/components/schemas/EventDAO"
                required:
                  - success
                  - message
        "400":
          description: Invalid request body
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  error:
                    type: string
                  data:
                    $ref: "#/components/schemas/EventDAO"
                required:
                  - success
                  - message
        "401":
          description: Please authenticate as patient
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  error:
                    type: string
                  data:
                    $ref: "#/components/schemas/EventDAO"
                required:
                  - success
                  - message
        "404":
          description: Failed to update image url
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  error:
                    type: string
                  data:
                    $ref: "#/components/schemas/EventDAO"
                required:
                  - success
                  - message
  /event/:id/doneTime:
    patch:
      parameters:
        - schema:
            type: string
            format: uuid
          required: true
          name: id
          in: path
      requestBody:
        required: true
        description: Request body for updating done time
        content:
          application/json:
            schema:
              type: object
              properties:
                doneTime:
                  type: string
                  nullable: true
                  description: event's done time
                  example: 2021-08-01T00:00:00.000Z
              required:
                - doneTime
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  error:
                    type: string
                  data:
                    $ref: "#/components/schemas/EventDAO"
                required:
                  - success
                  - message
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  error:
                    type: string
                  data:
                    $ref: "#/components/schemas/EventDAO"
                required:
                  - success
                  - message
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  error:
                    type: string
                  data:
                    $ref: "#/components/schemas/EventDAO"
                required:
                  - success
                  - message
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  error:
                    type: string
                  data:
                    $ref: "#/components/schemas/EventDAO"
                required:
                  - success
                  - message
  /event/:id:
    put:
      parameters:
        - schema:
            type: string
            format: uuid
          required: true
          name: id
          in: path
      requestBody:
        required: true
        description: Update event request body
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: event's title
                  example: Event Title
                description:
                  type: string
                  description: event's description
                  example: Event Description
                startTime:
                  type: string
                  nullable: true
                  description: event's start time
                  example: 2021-08-01T00:00:00.000Z
                endTime:
                  type: string
                  nullable: true
                  description: event's end time
                  example: 2021-08-01T00:00:00.000Z
                ringtoneType:
                  type: string
                  description: event's ringtone type
                  example: ringtone
              required:
                - title
                - description
                - startTime
                - endTime
                - ringtoneType
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  error:
                    type: string
                  data:
                    $ref: "#/components/schemas/EventDAO"
                required:
                  - success
                  - message
        "400":
          description: Invalid request body
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  error:
                    type: string
                  data:
                    $ref: "#/components/schemas/EventDAO"
                required:
                  - success
                  - message
        "401":
          description: Please authenticate
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  error:
                    type: string
                  data:
                    $ref: "#/components/schemas/EventDAO"
                required:
                  - success
                  - message
        "404":
          description: No patient found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  error:
                    type: string
                  data:
                    $ref: "#/components/schemas/EventDAO"
                required:
                  - success
                  - message
  /user/self:
    get:
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RespGetProfile"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RespGetProfile"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RespGetProfile"
